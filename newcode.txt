// FitnessGUI.java (updated)
import javax.swing.*;
import java.awt.*;
import java.time.LocalDate;

public class FitnessGUI extends JFrame {
    // ... [previous code remains unchanged until WorkoutPanel] ...

    private class WorkoutPanel extends JPanel {
        private JTabbedPane exerciseTabs;

        public WorkoutPanel() {
            setLayout(new BorderLayout());
            exerciseTabs = new JTabbedPane();
            exerciseTabs.addTab("Cardio", new CardioPanel());
            exerciseTabs.addTab("Strength", new StrengthPanel());
            add(exerciseTabs, BorderLayout.CENTER);
        }
    }

    private class CardioPanel extends JPanel {
        private JComboBox<String> exerciseCombo;
        private JSpinner durationSpinner;
        private JLabel intensityLabel;
        private DefaultListModel<String> logModel;

        public CardioPanel() {
            setLayout(new BorderLayout(10, 10));
            setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

            // Exercise selection
            exerciseCombo = new JComboBox<>(ExerciseDatabase.metValues.keySet().toArray(new String[0]));
            exerciseCombo.addActionListener(e -> updateIntensityDisplay());
            
            // Intensity display
            intensityLabel = new JLabel("Intensity: ");
            
            // Duration input
            durationSpinner = new JSpinner(new SpinnerNumberModel(30, 1, 240, 1));
            
            // Log list
            logModel = new DefaultListModel<>();
            JList<String> logList = new JList<>(logModel);

            // Add button
            JButton addBtn = new JButton("Add Cardio Session");
            addBtn.addActionListener(e -> addCardioExercise());

            // Input panel
            JPanel inputPanel = new JPanel(new GridLayout(3, 2, 10, 10));
            inputPanel.add(new JLabel("Exercise Type:"));
            inputPanel.add(exerciseCombo);
            inputPanel.add(new JLabel("Duration (minutes):"));
            inputPanel.add(durationSpinner);
            inputPanel.add(new JLabel("Intensity Level:"));
            inputPanel.add(intensityLabel);

            // Layout
            add(inputPanel, BorderLayout.NORTH);
            add(new JScrollPane(logList), BorderLayout.CENTER);
            add(addBtn, BorderLayout.SOUTH);

            updateIntensityDisplay();
        }

        private void updateIntensityDisplay() {
            String selected = (String) exerciseCombo.getSelectedItem();
            String intensity = ExerciseDatabase.getIntensity(selected);
            intensityLabel.setText("Intensity: " + intensity.toUpperCase());
        }

        private void addCardioExercise() {
            if (currentUser == null) {
                JOptionPane.showMessageDialog(this, "Complete user profile first!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String type = (String) exerciseCombo.getSelectedItem();
            int duration = (int) durationSpinner.getValue();
            String intensity = ExerciseDatabase.getIntensity(type);
            double weight = currentUser.getWeight();

            Cardio cardio = new Cardio(
                type, 
                duration, 
                type,  // Pass type as both name and exercise type
                intensity, 
                weight
            );
            
            workoutLog.addExercise(cardio);
            logModel.addElement(String.format("%s - %d min (%d kcal)", 
                type, duration, cardio.calculateCaloriesBurned()));
        }
    }

    private class StrengthPanel extends JPanel {
        private JComboBox<String> exerciseCombo;
        private JSpinner durationSpinner, setsSpinner, repsSpinner, weightSpinner;
        private DefaultListModel<String> logModel;

        public StrengthPanel() {
            setLayout(new BorderLayout(10, 10));
            setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

            // Exercise selection
            exerciseCombo = new JComboBox<>(
                StrengthExerciseTemplates.availableExercises.toArray(new String[0])
            );
            
            // Input fields
            durationSpinner = new JSpinner(new SpinnerNumberModel(30, 1, 240, 1));
            setsSpinner = new JSpinner(new SpinnerNumberModel(3, 1, 10, 1));
            repsSpinner = new JSpinner(new SpinnerNumberModel(10, 1, 50, 1));
            weightSpinner = new JSpinner(new SpinnerNumberModel(20.0, 0.0, 500.0, 2.5));
            
            // Log list
            logModel = new DefaultListModel<>();
            JList<String> logList = new JList<>(logModel);

            // Add button
            JButton addBtn = new JButton("Add Strength Session");
            addBtn.addActionListener(e -> addStrengthExercise());

            // Input panel
            JPanel inputPanel = new JPanel(new GridLayout(5, 2, 10, 10));
            inputPanel.add(new JLabel("Exercise:"));
            inputPanel.add(exerciseCombo);
            inputPanel.add(new JLabel("Duration (min):"));
            inputPanel.add(durationSpinner);
            inputPanel.add(new JLabel("Sets:"));
            inputPanel.add(setsSpinner);
            inputPanel.add(new JLabel("Reps per Set:"));
            inputPanel.add(repsSpinner);
            inputPanel.add(new JLabel("Weight (kg):"));
            inputPanel.add(weightSpinner);

            // Layout
            add(inputPanel, BorderLayout.NORTH);
            add(new JScrollPane(logList), BorderLayout.CENTER);
            add(addBtn, BorderLayout.SOUTH);
        }

        private void addStrengthExercise() {
            String exercise = (String) exerciseCombo.getSelectedItem();
            int duration = (int) durationSpinner.getValue();
            int sets = (int) setsSpinner.getValue();
            int reps = (int) repsSpinner.getValue();
            double weight = (double) weightSpinner.getValue();

            StrengthTraining session = new StrengthTraining(
                exercise,
                duration,
                sets,
                reps,
                weight
            );

            workoutLog.addExercise(session);
            logModel.addElement(String.format("%s - %d√ó%d @ %.1fkg (%d kcal)", 
                exercise, sets, reps, weight, session.calculateCaloriesBurned()));
        }
    }

    // ... [remaining code unchanged] ...
}